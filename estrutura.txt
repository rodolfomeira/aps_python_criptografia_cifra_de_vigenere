Explicação geral:
Função preparar_texto: Limpa o texto removendo caracteres não alfabéticos e convertendo para minúsculas.

Função gerar_chave: Ajusta a chave de acordo com o tamanho do texto e a converte em valores numéricos correspondentes à posição das letras no alfabeto.

Funções criptografar e descriptografar: Usam a cifra de Vigenère para realizar a criptografia e descriptografia do texto, respectivamente, de acordo com os valores da chave.

Função menu: Controla o fluxo do programa e as interações com o usuário, oferecendo opções de criptografia, descriptografia ou saída do programa.


Métodos


preparar_texto(texto):
Remove caracteres não alfabéticos do texto e o transforma para letras minúsculas.

gerar_chave(texto, chave):
Gera uma chave repetida até o tamanho do texto e a converte para valores numéricos baseados nas posições das letras no alfabeto.

criptografar(texto, chave, alfabeto):
Criptografa o texto utilizando a cifra de Vigenère com base na chave fornecida.

descriptografar(texto, chave, alfabeto):
Descriptografa o texto utilizando a cifra de Vigenère com base na chave fornecida.

menu():
Exibe um menu interativo que permite ao usuário escolher entre criptografar, descriptografar ou sair do programa.




Variáveis

texto:
Da classe string, que contém o texto a ser criptografado ou descriptografado.

chave:
Da classe string, que representa a chave utilizada para a criptografia ou descriptografia.

alfabeto:
Da classe string, que contém todas as letras minúsculas do alfabeto (a-z).

texto_convertido:
Da classe string, que armazena o texto resultante após a criptografia ou descriptografia.

tamanho:
Da classe inteiro, que representa o tamanho do alfabeto (por exemplo, 26 para o alfabeto inglês).

chave_index:
Da classe inteiro, que mantém o controle do índice atual da chave durante o processo de criptografia ou descriptografia.

indice_original:
Da classe inteiro, que armazena a posição original da letra no alfabeto antes da alteração.

indice_novo:
Da classe inteiro, que armazena a nova posição da letra no alfabeto após a aplicação da cifra.

opcao:
Da classe inteiro, que armazena a escolha do usuário no menu.

texto_preparado:
Da classe string, que armazena o texto após a limpeza de caracteres não alfabéticos.

chave_ajustada:
Da classe lista, que contém os valores numéricos da chave ajustada para a criptografia ou descriptografia.

texto_criptografado:
Da classe string, que armazena o texto resultante da criptografia.

texto_descriptografado:
Da classe string, que armazena o texto resultante da descriptografia.


Estruturas de Controle


if:
Usada para verificar condições, como se a chave está vazia, se o texto está vazio e se o usuário escolheu uma opção válida.

while:
Utilizada para criar laços que permitem que o usuário continue tentando até que uma condição de saída seja atendida, como uma chave válida ou uma opção do menu.

for:
Usada para iterar sobre caracteres no texto ou na chave, permitindo a repetição de ações para cada item.

try/except:
Usado para tratar exceções que podem ocorrer durante a entrada de dados do usuário, como a conversão de texto para número e manipulação de chaves.



A cifra de Vigenère é um método de criptografia por substituição polialfabética, e você a implementou de uma forma eficiente no seu código, permitindo tanto criptografia quanto descriptografia de textos. Vou explicar em detalhes como a cifra de Vigenère foi utilizada no seu código, destacando pontos importantes que foram implementados.

### Preparação do Texto

O método `preparar_texto(texto)` é responsável por remover caracteres não alfabéticos e transformar todas as letras em minúsculas, garantindo que a criptografia ocorra apenas com letras do alfabeto. Isso faz com que caracteres especiais, números e espaços sejam ignorados na criptografia, mas preservados na versão final do texto criptografado. Este pré-processamento é importante porque a cifra de Vigenère tradicionalmente opera apenas sobre letras.

### Geração da Chave

O método `gerar_chave(texto, chave)` é uma parte essencial da cifra de Vigenère, pois adapta a chave de criptografia ao comprimento do texto que será criptografado. A cifra de Vigenère exige que a chave tenha o mesmo comprimento do texto para que cada letra da chave possa cifrar uma letra correspondente do texto. No código:

- A chave é repetida ciclicamente até alcançar o tamanho do texto, o que garante que o padrão de substituição se repita ao longo do texto.
- Cada letra da chave é convertida para sua posição correspondente no alfabeto (ex.: 'a' = 0, 'b' = 1), facilitando o cálculo do deslocamento.

Um detalhe importante é que o código também verifica se a chave contém apenas letras e não permite que a chave seja vazia, evitando erros futuros.

### Criptografia

No método `criptografar(texto, chave, alfabeto)`, o texto é criptografado conforme a lógica da cifra de Vigenère:

- Para cada letra do texto, o índice no alfabeto é obtido.
- O valor da chave correspondente é adicionado ao índice original da letra, e o novo índice resultante é calculado usando a operação módulo (`% tamanho do alfabeto`). Isso garante que o índice permaneça dentro dos limites do alfabeto.
- Se o texto contiver caracteres especiais ou números, eles são preservados inalterados no texto criptografado.

Esse processo garante uma criptografia robusta, sem alterar caracteres fora do alfabeto, como símbolos e números, o que é uma adição prática ao código, tornando-o mais flexível que a cifra de Vigenère tradicional.

### Descriptografia

A descriptografia ocorre de maneira semelhante à criptografia no método `descriptografar(texto, chave, alfabeto)`, mas, em vez de somar o valor da chave ao índice original da letra, o valor da chave é subtraído. O mesmo princípio de preservação de caracteres especiais é mantido aqui:

- O código garante que apenas letras do alfabeto sejam modificadas e que caracteres especiais e números sejam mantidos inalterados.
- O uso de operações de módulo evita que o índice resultante vá além dos limites do alfabeto, mantendo a integridade do texto durante o processo de descriptografia.

### Estrutura de Controle - Menu

O `menu()` é responsável por controlar o fluxo do programa, oferecendo três opções ao usuário: criptografar um texto, descriptografar um texto ou sair do programa. Ele inclui verificações de erro para garantir que entradas inválidas, como opções incorretas ou chaves não alfabéticas, sejam tratadas adequadamente.

#### Pontos Importantes:

1.Importação do módulo string: Ao importar `string.ascii_lowercase`, você tem acesso ao alfabeto em minúsculas, o que facilita a manipulação das letras no processo de criptografia e descriptografia.
   
2. **Tratamento de entradas inválidas**: O código realiza verificações para garantir que a chave fornecida pelo usuário seja composta apenas de letras, o que é essencial para a correta aplicação da cifra de Vigenère. Isso evita que erros de criptografia ocorram ao usar uma chave inadequada.

3. **Preservação de caracteres especiais**: O código mantém espaços, números e símbolos inalterados no texto, o que é um aprimoramento prático, pois muitas vezes os textos contêm esses elementos. A cifra de Vigenère tradicionalmente opera apenas sobre letras, mas a sua implementação vai além, garantindo que esses caracteres não alfabéticos sejam preservados.

4. **Confiabilidade**: Verificações como a chave não vazia, o tratamento de entradas erradas e a adaptação da chave ao tamanho do texto garantem que o programa funcione de forma robusta em diferentes cenários.

### Conclusão

A implementação da cifra de Vigenère no seu código segue o modelo clássico da cifra, mas com algumas melhorias importantes:
- **Tratamento de caracteres especiais**: A cifra é aplicada apenas às letras, e outros caracteres são preservados, o que torna o código mais adaptável a diferentes tipos de entrada.
- **Interface amigável**: O menu interativo com tratamento de erros torna a criptografia e descriptografia mais acessíveis ao usuário, minimizando erros e melhorando a experiência.
- **Flexibilidade e robustez**: O código é robusto o suficiente para lidar com entradas inválidas e garantir a segurança do processo de criptografia.

Esses detalhes tornam a implementação uma solução prática e confiável para aplicar a cifra de Vigenère em textos com caracteres mistos.